MEMORY {
    ZEROPAGE:start = $00,    size = $0100, type = rw, file = "";
    RAM:     start = $0100,  size = $0700, type = rw, file = "";
	HIRAM:   start = $6000,  size = $2000, type = rw, file = "";
	
    HDR:     start = $0000,  size = $0010, type = ro, file = %O;
	
    PRG0:    bank = $0,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG1:    bank = $1,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG2:    bank = $2,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG3:    bank = $3,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG4:    bank = $4,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG5:    bank = $5,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG6:    bank = $6,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG7:    bank = $7,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG8:    bank = $8,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG9:    bank = $9,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRGA:    bank = $A,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRGB:    bank = $B,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRGC:    bank = $C,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRGD:    bank = $D,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRGE:    bank = $E,  start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRGF:    bank = $F,  start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG10:   bank = $10, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG11:   bank = $11, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG12:   bank = $12, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG13:   bank = $13, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG14:   bank = $14, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG15:   bank = $15, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG16:   bank = $16, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG17:   bank = $17, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG18:   bank = $18, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG19:   bank = $19, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG1A:   bank = $1A, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG1B:   bank = $1B, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG1C:   bank = $1C, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG1D:   bank = $1D, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG1E:   bank = $1E, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG1F:   bank = $1F, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG20:   bank = $20, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG21:   bank = $21, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG22:   bank = $22, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG23:   bank = $23, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG24:   bank = $24, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG25:   bank = $25, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG26:   bank = $26, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG27:   bank = $27, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG28:   bank = $28, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG29:   bank = $29, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG2A:   bank = $2A, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG2B:   bank = $2B, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG2C:   bank = $2C, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG2D:   bank = $2D, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG2E:   bank = $2E, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG2F:   bank = $2F, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG30:   bank = $30, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG31:   bank = $31, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG32:   bank = $32, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG33:   bank = $33, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG34:   bank = $34, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG35:   bank = $35, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG36:   bank = $36, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG37:   bank = $37, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG38:   bank = $38, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG39:   bank = $39, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG3A:   bank = $3A, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG3B:   bank = $3B, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG3C:   bank = $3C, start = $8000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG3D:   bank = $3D, start = $a000,  size = $2000, type = ro, file = %O, fill = yes;
	PRG3E:   bank = $3E, start = $c000,  size = $2000, type = ro, file = %O, fill = yes;
    PRG3F:   bank = $3F, start = $e000,  size = $2000, type = ro, file = %O, fill = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZEROPAGE,  type = zp;
	BHOP_ZEROPAGE: load = ZEROPAGE, type = overwrite, offset = $0;
    #OAM:      load = OAM, type = bss, align = $100;
    VARS:     load = RAM, type = bss, start = $170;
	HIVARS:   load = HIRAM, type = overwrite, start = $6db2;
	#BHOP_RAM2: load = HIRAM, type = overwrite, start = $79e4;
	BHOP_RAM: load = HIRAM, type = overwrite, start = $6dc8;
	
	HDR:      load = HDR, type = ro;
	PATCH_HDR_NUM_BANKS: load = HDR, type = overwrite, optional = yes, define = yes, offset = 4;
	PATCH_HDR_MAPPER: load = HDR, type = overwrite, optional = yes, define = yes, offset = 6;
	
    BANK0:    load = PRG0, type = ro;
    BANK1:    load = PRG1, type = ro;
    BANK2:    load = PRG2, type = ro;
    BANK3:    load = PRG3, type = ro;
    BANK4:    load = PRG4, type = ro;
	BANK5:    load = PRG5, type = ro;
	BANK6:    load = PRG6, type = ro;
    BANK7:    load = PRG7, type = ro;
    BANK8:    load = PRG8, type = ro;
    BANK9:    load = PRG9, type = ro;
    BANKA:    load = PRGA, type = ro;
    BANKB:    load = PRGB, type = ro;
    BANKC:    load = PRGC, type = ro;
    BANKD:    load = PRGD, type = ro;
    BANKE:    load = PRGE, type = ro;
	BANKF:    load = PRGF, type = ro;
    BANK10:   load = PRG10, type = ro;
    BANK11:   load = PRG11, type = ro;
    BANK12:   load = PRG12, type = ro;
    BANK13:   load = PRG13, type = ro;
    BANK14:   load = PRG14, type = ro;
    BANK15:   load = PRG15, type = ro;
    
	BANK16:   load = PRG16, type = ro;
	#PATCH_BATTLE_TRACK_NUM: load = PRG16, type = overwrite, define = yes, start = $99c0;
	
    BANK17:   load = PRG17, type = ro;
    BANK18:   load = PRG18, type = ro;
	BANK19:   load = PRG19, type = ro;
	BANK1A:   load = PRG1A, type = ro;
	
    BANK1B:   load = PRG1B, type = ro;
	PATCH_CLEAR_END_BUFF: load = PRG1B, type = overwrite, define = yes, start = $a4b6;
	PATCH_END_BUFF_ADDR: load = PRG1B, type = overwrite, define = yes, start = $a565;
	PATCH_END_BUFF_ADDR2: load = PRG1B, type = overwrite, define = yes, start = $a65f;
	PATCH_PLAY_FANFARE_54: load = PRG1B, type = overwrite, define = yes, start = $af69;
	PATCH_UPD_SOUND: load = PRG1B, type = overwrite, define = yes, start = $b099;
	
    BANK1C:   load = PRG1C, type = ro;
	PATCH_PLAY_FANFARE_55: load = PRG1C, type = overwrite, define = yes, start = $9980;

    BANK1D:   load = PRG1D, type = ro;
	PATCH_PLAY_FANFARE_54_2: load = PRG1D, type = overwrite, define = yes, start = $b929;
	PATCH_PLAY_FANFARE_56: load = PRG1D, type = overwrite, define = yes, start = $abbd;
	PATCH_PLAY_FANFARE_57: load = PRG1D, type = overwrite, define = yes, start = $b57b;

    BANK1E:   load = PRG1E, type = ro, optional = yes;
    BANK1F:   load = PRG1F, type = ro, optional = yes;
    BANK20:   load = PRG20, type = ro, optional = yes;
    BANK21:   load = PRG21, type = ro, optional = yes;
    BANK22:   load = PRG22, type = ro, optional = yes;
    BANK23:   load = PRG23, type = ro, optional = yes;
    BANK24:   load = PRG24, type = ro, optional = yes;
    BANK25:   load = PRG25, type = ro, optional = yes;

    FT_CODE_BANK: load = PRG26, type = ro;
	RESET_HDLR_CONT: load = PRG26, type = ro;
	BHOP_PRG: load = PRG26, type = ro;

    BANK27:   load = PRG27, type = ro, optional = yes;
    BANK28:   load = PRG28, type = ro, optional = yes;
	BANK29:   load = PRG29, type = ro, optional = yes;
    BANK2A:   load = PRG2A, type = ro, optional = yes;
    BANK2B:   load = PRG2B, type = ro, optional = yes;
    BANK2C:   load = PRG2C, type = ro, optional = yes;
    BANK2D:   load = PRG2D, type = ro, optional = yes;
    BANK2E:   load = PRG2E, type = ro, optional = yes;
    BANK2F:   load = PRG2F, type = ro, optional = yes;
    BANK30:   load = PRG30, type = ro, optional = yes;
    BANK31:   load = PRG31, type = ro, optional = yes;
    BANK32:   load = PRG32, type = ro, optional = yes;
    BANK33:   load = PRG33, type = ro, optional = yes;
    BANK34:   load = PRG34, type = ro, optional = yes;
    BANK35:   load = PRG35, type = ro, optional = yes;
    BANK36:   load = PRG36, type = ro, optional = yes;
    BANK37:   load = PRG37, type = ro, optional = yes;
    BANK38:   load = PRG38, type = ro, optional = yes;
	BANK39:   load = PRG39, type = ro, optional = yes;
    BANK3A:   load = PRG3A, type = ro, optional = yes;
    BANK3B:   load = PRG3B, type = ro, optional = yes;
    BANK3C:   load = PRG3C, type = ro, optional = yes;
    BANK3D:   load = PRG3D, type = ro, optional = yes;
    BANK3E:   load = PRG3E, type = ro;
    BANK3F:   load = PRG3F, type = ro;
	
	PATCH_PLAY_FANFARE_54_3: load = PRG3E, type = overwrite, define = yes, start = $ce0a;
	PATCH_PLAY_FANFARE_54_58: load = PRG3E, type = overwrite, define = yes, start = $d633;

	PATCH_SHIP_SFX: load = PRG3E, type = overwrite, define = yes, start = $c117;
	PATCH_STOP_SHIP_SFX: load = PRG3E, type = overwrite, define = yes, start = $c184;
	PATCH_STOP_SHIP_SFX2: load = PRG3E, type = overwrite, define = yes, start = $c1a0;
	PATCH_SILENCE_MUSIC_AND_SFX: load = PRG3E, type = overwrite, define = yes, start = $c1ce;
	PATCH_STOP_SHIP_SFX3: load = PRG3E, type = overwrite, define = yes, start = $c645;
	PATCH_MAP_TILE_DAMAGE_SFX: load = PRG3E, type = overwrite, define = yes, start = $c7e7;
	PATCH_DOOR_SFX: load = PRG3E, type = overwrite, define = yes, start = $cf1e;
	PATCH_SHIP_STOP_SFX4: load = PRG3F, type = overwrite, define = yes, start = $e1dd;
	PATCH_SHIP_SFX2: load = PRG3F, type = overwrite, define = yes, start = $e215;
	
	#PATCH_FAR_CALL_UPD_SOUND: load = PRG3F, type = overwrite, define = yes, start = $c689;
	PATCH_SWITCH_BANK: load = PRG3F, type = overwrite, define = yes, start = $fe03;
	PATCH_RESET_HDLR: load = PRG3F, type = overwrite, define = yes, start = $fe2e;
	#PATCH_CALL_SWITCH_BANK: load = PRG3F, type = overwrite, define = yes, start = $fe96;
}
